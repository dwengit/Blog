<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Blog.Core</name>
    </assembly>
    <members>
        <member name="M:Blog.Core.JwtHelper.IssueJWT(Blog.Core.TokenModelJWT)">
            <summary>
            颁发JWT字符串
            </summary>
            <param name="tokenModel"></param>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.JwtHelper.SerializeJWT(System.String)">
            <summary>
            解析
            </summary>
            <param name="jwtStr"></param>
            <returns></returns>
        </member>
        <member name="T:Blog.Core.TokenModelJWT">
            <summary>
            令牌
            </summary>
        </member>
        <member name="P:Blog.Core.TokenModelJWT.Uid">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Blog.Core.TokenModelJWT.Role">
            <summary>
            角色
            </summary>
        </member>
        <member name="P:Blog.Core.TokenModelJWT.Work">
            <summary>
            职能
            </summary>
        </member>
        <member name="M:Blog.Core.Controllers.BlogController.Get(System.Int32)">
            <summary>
            根据id获取数据
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.Controllers.LoginController.GetJWTStr(System.Int64,System.String)">
            <summary>
            获取JWT的重写方法，推荐这种，注意在文件夹OverWrite下
            </summary>
            <param name="id">id</param>
            <param name="sub">角色</param>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.Controllers.ValuesController.Get">
            <summary>
            测试， 获取数据
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
